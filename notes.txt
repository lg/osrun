things to consider for detection:

- using us english windows iso

after it working:

- disable windows update
- disable hibernate
- open ping
- enable rdp and open port
- disable uac
- unlimited password expiration

notes:

- run using `PACKER_LOG=1 packer build -timestamp-ui win11.packer.json`
- use a vnc client (not macos screen sharing) to connect to 127.0.0.1:5950
- run `qemu-system-x86_64 -cpu help` to get a list of cpus (and for other commands like accel too)
- if problems happen during the install, press Shift+F10 and `notepad x:\windows\panther\setuperr.log`

TODO:

- make it so the key doesnt need to be pressed a bunch of times
- that ProtectYourPC value, a website says 3
- ["-vga", "virtio"]
- optimize according to: https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/iot-ent-optimize-images?view=windows-11
  - Microsoft-Windows-Setup\ImageInstall\OSImage\Compact


unattend todo:
- clean up diskconfiguration and maybe use
- set fullname and organization in UserData
- set ComputerName in microsoft-windows-shell-setup
- set OEMInformation and OEMName in microsoft-windows-shell-setup

- downloading windows: https://github.com/quickemu-project/quickemu/blob/c7e91a0ea064f49223c20538431333340411f2e6/quickget#L2067






=================

        <!-- <RunSynchronousCommand wcm:action="add">
          <Order>1</Order>
          <Path>icacls "c:\programdata\Microsoft\Windows Defender\*" /remove:g *S-1-5-18 /T /C /L /Q</Path>
        </RunSynchronousCommand>
        <RunSynchronousCommand wcm:action="add">
          <Order>2</Order>
          <Path>icacls "c:\windows\system32\sppsvc.exe" /remove:g *S-1-5-18 /T /C /L /Q</Path>
        </RunSynchronousCommand>
        <RunSynchronousCommand wcm:action="add">
          <Order>1</Order>
          <Path>cmd</Path>
        </RunSynchronousCommand> -->



        qemu-system-x86_64 -m 8192M -cpu host -device qemu-xhci -device usb-tablet,bus=usb-bus.0 -device e1000,netdev=user.0 -machine type=q35,accel=kvm -boot once=d -netdev user,id=user.0,hostfwd=tcp::2844-:5985 -vnc 127.0.0.1:50 -smp 16 -name packer-qemu -drive file=output/packer-qemu,if=virtio,cache=writeback,discard=ignore,format=qcow2



bios: 18min 19s
efi: Xs

KB5027231 is the 2023-06 Cumulative Update for Windows 11 Version 22H2 for x64-Based Systems



qemu-system-x86_64 \
  -m 8192M \
  -smp 32 \
  -cpu host \
  -vga virtio \
  -vnc 127.0.0.1:50 \
  -device qemu-xhci \
  -device usb-tablet,bus=usb-bus.0 \
  -device virtio-net,netdev=user.0 \
  -drive file=output/packer-qemu,if=virtio,cache=writeback,discard=ignore,format=qcow2 \
  -netdev user,id=user.0,hostfwd=tcp::4403-:5985 \
  -name packer-qemu \
  -machine type=q35,accel=kvm \
  -boot c


# -fda /tmp/packer872549596 \
# -drive file=/root/arkalis-win/Win11_22H2_English_x64v2.iso,media=cdrom \
# -boot once=d \
# -cdrom virtio-win.iso





next:
- do console log
- make sure everythings deleted
- autologin
- add services to right click menu
- dont require virtio?


"qemuargs": [
        ["-cdrom", "virtio-win.iso"],
        ["-device", "qemu-xhci"],
        ["-device", "usb-tablet,bus=usb-bus.0"],
        ["-device", "pci-serial,chardev=c1"],
        ["-chardev", "stdio,id=c1,signal=off"]
      ],


      LANG=en-US
  for file in $(find /tmp/win11 -type f -iname "*.cab" -not -iname "*windows1*-kb*.cab" -not -iname "ssu-*.cab" -not -iname "*desktopdeployment*.cab" -not -iname "*aggregatedmetadata*.cab"); do
    fileName=$(basename $file .cab)
    echo "file: $file, fileName: $fileName"

    mkdir -p /tmp/win11/extract
    cabextract --keep-symlinks --directory /tmp/win11/extract $file
    wimlib-imagex capture /tmp/win11/extract "/tmp/win11/$fileName.esd" --no-acls --norpfix "Edition Package" "Edition Package"
  done